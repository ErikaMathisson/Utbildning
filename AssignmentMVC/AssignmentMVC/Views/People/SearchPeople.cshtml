@model AssignmentMVC.Models.People

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>People</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PhoneNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Search)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Search)
        </dd>

    </dl>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-default" /> |
            @Html.ActionLink("Back to List", "Index")
        </div>
    }
</div>



<!-- from here, different ways to get your partials -->

@Html.Action("Person", "Home")



<!--renderPartial returns void is faster-->
@{Html.RenderPartial("_person", Model);}


@Html.Partial("_person", Model)

@Ajax.ActionLink("Show data", "Person", "Home", new AjaxOptions
{
    HttpMethod = "post",
    OnBegin = "$(this).hide()",
    OnComplete = "$(this).show()",
    UpdateTargetId = "person",
    InsertionMode = InsertionMode.Replace

    @* the div tag  with id= "person" below will be updated with information from the person action in the home controller
        
        InsertionMode.InsertAfter InsertionMode.InsertBefore 
        
        will override link in actionlink, note need the input in the person action in the home controller
        Url = "/Home/Person?elements=10
        
        *@


});

<div id="person">


</div>

<script src="~/scripts/jquery.unobtrusive-ajax.min.js"></script>




@if (Model.Count > 0)
{
    foreach (var item in Model)
    {
        <p>@item.Name  </p>
    }

}